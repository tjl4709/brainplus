/*hello world (single cell version)*/
='H'.	//set current cell to 'H' and print
+29.	//set current cell to 'e' and print
+7..	//set cell to 'l' and print twice
+0x3.	//set cell to 'o' and print
=' '.	//set cell to space and print
='W'.	//set cell to uppercase W and print
='o'.	//set cell to lowercase o and print
+3.	//set cell and print lowercase r
-0x6.	//set cell and print lowercase l
-8.	//print lowercase d
='!'.	//print exclamation mark

/*hello world (single char per cell version)*/
='H'.	//set cell 0 to H and print
@+='e'.	//increment ptr, set cell 1 to e, and print
@+='l'..//increment ptr, set cell 2 to l, and print twice
@+='o'.	//increment ptr, set cell 3 to o, and print
@+=' '.	//inc ptr, set cell 4 to space, and print
@+='W'.	//inc ptr, set cell 5 to W, and print
@-@-.	//dec ptr twice and print (o)
@+3='r'.//inc ptr by 3, set cell 6 to r, and print
@=2.	//set ptr to cell 2 and print (l)
@=7='d'.//set ptr to c7, set c7 to d, and print
@+='!'.	//inc ptr, set c8 to !, and print

/*find the sum of an array*/
#define size  2
#define start 3
#define cntr  4

//size = size of array
//start = first position in array
//uses cells 0-1
//ptr ends at sum
//returns sum in position after array
sum {
  @=0 =@size+
  @=@start@+@size@+1 =0
  for (@=0 =0; <@size; +) {
    @=1 =@start+@0
    @=@start@+@size@+1
    +@@1
    @=0
  }
  @=@start@+@size@+1
}

@=size =8
@=start =start+2
for (@=cntr =1; <=@size; +) { 
  @+@cntr =@cntr
  @=cntr
}
sum
